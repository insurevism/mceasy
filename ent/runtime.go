// Code generated by ent, DO NOT EDIT.

package ent

import (
	"mceasy/ent/attendance"
	"mceasy/ent/employee"
	"mceasy/ent/role"
	"mceasy/ent/roleuser"
	"mceasy/ent/salarycalculation"
	"mceasy/ent/schema"
	"mceasy/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	attendanceMixin := schema.Attendance{}.Mixin()
	attendanceMixinFields0 := attendanceMixin[0].Fields()
	_ = attendanceMixinFields0
	attendanceFields := schema.Attendance{}.Fields()
	_ = attendanceFields
	// attendanceDescCreatedAt is the schema descriptor for created_at field.
	attendanceDescCreatedAt := attendanceMixinFields0[0].Descriptor()
	// attendance.DefaultCreatedAt holds the default value on creation for the created_at field.
	attendance.DefaultCreatedAt = attendanceDescCreatedAt.Default.(func() time.Time)
	// attendanceDescModifiedAt is the schema descriptor for modified_at field.
	attendanceDescModifiedAt := attendanceMixinFields0[1].Descriptor()
	// attendance.DefaultModifiedAt holds the default value on creation for the modified_at field.
	attendance.DefaultModifiedAt = attendanceDescModifiedAt.Default.(func() time.Time)
	// attendance.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	attendance.UpdateDefaultModifiedAt = attendanceDescModifiedAt.UpdateDefault.(func() time.Time)
	// attendanceDescIsWeekend is the schema descriptor for is_weekend field.
	attendanceDescIsWeekend := attendanceFields[6].Descriptor()
	// attendance.DefaultIsWeekend holds the default value on creation for the is_weekend field.
	attendance.DefaultIsWeekend = attendanceDescIsWeekend.Default.(bool)
	// attendanceDescMarkedByAdmin is the schema descriptor for marked_by_admin field.
	attendanceDescMarkedByAdmin := attendanceFields[8].Descriptor()
	// attendance.DefaultMarkedByAdmin holds the default value on creation for the marked_by_admin field.
	attendance.DefaultMarkedByAdmin = attendanceDescMarkedByAdmin.Default.(bool)
	employeeMixin := schema.Employee{}.Mixin()
	employeeMixinFields0 := employeeMixin[0].Fields()
	_ = employeeMixinFields0
	employeeFields := schema.Employee{}.Fields()
	_ = employeeFields
	// employeeDescCreatedAt is the schema descriptor for created_at field.
	employeeDescCreatedAt := employeeMixinFields0[0].Descriptor()
	// employee.DefaultCreatedAt holds the default value on creation for the created_at field.
	employee.DefaultCreatedAt = employeeDescCreatedAt.Default.(func() time.Time)
	// employeeDescModifiedAt is the schema descriptor for modified_at field.
	employeeDescModifiedAt := employeeMixinFields0[1].Descriptor()
	// employee.DefaultModifiedAt holds the default value on creation for the modified_at field.
	employee.DefaultModifiedAt = employeeDescModifiedAt.Default.(func() time.Time)
	// employee.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	employee.UpdateDefaultModifiedAt = employeeDescModifiedAt.UpdateDefault.(func() time.Time)
	// employeeDescEmployeeID is the schema descriptor for employee_id field.
	employeeDescEmployeeID := employeeFields[1].Descriptor()
	// employee.EmployeeIDValidator is a validator for the "employee_id" field. It is called by the builders before save.
	employee.EmployeeIDValidator = employeeDescEmployeeID.Validators[0].(func(string) error)
	// employeeDescFullName is the schema descriptor for full_name field.
	employeeDescFullName := employeeFields[2].Descriptor()
	// employee.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	employee.FullNameValidator = func() func(string) error {
		validators := employeeDescFullName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(full_name string) error {
			for _, fn := range fns {
				if err := fn(full_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// employeeDescEmail is the schema descriptor for email field.
	employeeDescEmail := employeeFields[3].Descriptor()
	// employee.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	employee.EmailValidator = func() func(string) error {
		validators := employeeDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// employeeDescPhone is the schema descriptor for phone field.
	employeeDescPhone := employeeFields[4].Descriptor()
	// employee.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	employee.PhoneValidator = employeeDescPhone.Validators[0].(func(string) error)
	// employeeDescPosition is the schema descriptor for position field.
	employeeDescPosition := employeeFields[5].Descriptor()
	// employee.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	employee.PositionValidator = employeeDescPosition.Validators[0].(func(string) error)
	// employeeDescDepartment is the schema descriptor for department field.
	employeeDescDepartment := employeeFields[6].Descriptor()
	// employee.DepartmentValidator is a validator for the "department" field. It is called by the builders before save.
	employee.DepartmentValidator = employeeDescDepartment.Validators[0].(func(string) error)
	// employeeDescBaseSalary is the schema descriptor for base_salary field.
	employeeDescBaseSalary := employeeFields[8].Descriptor()
	// employee.DefaultBaseSalary holds the default value on creation for the base_salary field.
	employee.DefaultBaseSalary = employeeDescBaseSalary.Default.(float64)
	// employeeDescIsActive is the schema descriptor for is_active field.
	employeeDescIsActive := employeeFields[9].Descriptor()
	// employee.DefaultIsActive holds the default value on creation for the is_active field.
	employee.DefaultIsActive = employeeDescIsActive.Default.(bool)
	roleMixin := schema.Role{}.Mixin()
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleMixinFields0[0].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescModifiedAt is the schema descriptor for modified_at field.
	roleDescModifiedAt := roleMixinFields0[1].Descriptor()
	// role.DefaultModifiedAt holds the default value on creation for the modified_at field.
	role.DefaultModifiedAt = roleDescModifiedAt.Default.(func() time.Time)
	// role.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	role.UpdateDefaultModifiedAt = roleDescModifiedAt.UpdateDefault.(func() time.Time)
	roleuserMixin := schema.RoleUser{}.Mixin()
	roleuserMixinFields0 := roleuserMixin[0].Fields()
	_ = roleuserMixinFields0
	roleuserFields := schema.RoleUser{}.Fields()
	_ = roleuserFields
	// roleuserDescCreatedAt is the schema descriptor for created_at field.
	roleuserDescCreatedAt := roleuserMixinFields0[0].Descriptor()
	// roleuser.DefaultCreatedAt holds the default value on creation for the created_at field.
	roleuser.DefaultCreatedAt = roleuserDescCreatedAt.Default.(func() time.Time)
	// roleuserDescModifiedAt is the schema descriptor for modified_at field.
	roleuserDescModifiedAt := roleuserMixinFields0[1].Descriptor()
	// roleuser.DefaultModifiedAt holds the default value on creation for the modified_at field.
	roleuser.DefaultModifiedAt = roleuserDescModifiedAt.Default.(func() time.Time)
	// roleuser.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	roleuser.UpdateDefaultModifiedAt = roleuserDescModifiedAt.UpdateDefault.(func() time.Time)
	salarycalculationMixin := schema.SalaryCalculation{}.Mixin()
	salarycalculationMixinFields0 := salarycalculationMixin[0].Fields()
	_ = salarycalculationMixinFields0
	salarycalculationFields := schema.SalaryCalculation{}.Fields()
	_ = salarycalculationFields
	// salarycalculationDescCreatedAt is the schema descriptor for created_at field.
	salarycalculationDescCreatedAt := salarycalculationMixinFields0[0].Descriptor()
	// salarycalculation.DefaultCreatedAt holds the default value on creation for the created_at field.
	salarycalculation.DefaultCreatedAt = salarycalculationDescCreatedAt.Default.(func() time.Time)
	// salarycalculationDescModifiedAt is the schema descriptor for modified_at field.
	salarycalculationDescModifiedAt := salarycalculationMixinFields0[1].Descriptor()
	// salarycalculation.DefaultModifiedAt holds the default value on creation for the modified_at field.
	salarycalculation.DefaultModifiedAt = salarycalculationDescModifiedAt.Default.(func() time.Time)
	// salarycalculation.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	salarycalculation.UpdateDefaultModifiedAt = salarycalculationDescModifiedAt.UpdateDefault.(func() time.Time)
	// salarycalculationDescAbsentDays is the schema descriptor for absent_days field.
	salarycalculationDescAbsentDays := salarycalculationFields[5].Descriptor()
	// salarycalculation.DefaultAbsentDays holds the default value on creation for the absent_days field.
	salarycalculation.DefaultAbsentDays = salarycalculationDescAbsentDays.Default.(int)
	// salarycalculationDescPresentDays is the schema descriptor for present_days field.
	salarycalculationDescPresentDays := salarycalculationFields[6].Descriptor()
	// salarycalculation.DefaultPresentDays holds the default value on creation for the present_days field.
	salarycalculation.DefaultPresentDays = salarycalculationDescPresentDays.Default.(int)
	// salarycalculationDescDeductionAmount is the schema descriptor for deduction_amount field.
	salarycalculationDescDeductionAmount := salarycalculationFields[8].Descriptor()
	// salarycalculation.DefaultDeductionAmount holds the default value on creation for the deduction_amount field.
	salarycalculation.DefaultDeductionAmount = salarycalculationDescDeductionAmount.Default.(float64)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescModifiedAt is the schema descriptor for modified_at field.
	userDescModifiedAt := userMixinFields0[1].Descriptor()
	// user.DefaultModifiedAt holds the default value on creation for the modified_at field.
	user.DefaultModifiedAt = userDescModifiedAt.Default.(func() time.Time)
	// user.UpdateDefaultModifiedAt holds the default value on update for the modified_at field.
	user.UpdateDefaultModifiedAt = userDescModifiedAt.UpdateDefault.(func() time.Time)
	// userDescFullname is the schema descriptor for fullname field.
	userDescFullname := userFields[1].Descriptor()
	// user.FullnameValidator is a validator for the "fullname" field. It is called by the builders before save.
	user.FullnameValidator = userDescFullname.Validators[0].(func(string) error)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[2].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[4].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
