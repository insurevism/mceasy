// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package employee

import (
	"github.com/go-redis/redis/v8"
	"github.com/google/wire"
	"mceasy/ent"
	"mceasy/internal/applications/employee/repository"
	"mceasy/internal/applications/employee/service"
	"mceasy/internal/component/cache"
	"mceasy/internal/component/transaction"
)

// Injectors from employee_injector.go:

func InitializedEmployeeService(dbClient *ent.Client, redisClient *redis.Client) *service.EmployeeServiceImpl {
	employeeRepositoryImpl := repository.NewEmployeeRepository(dbClient)
	cacheImpl := cache.NewCache(redisClient)
	trxImpl := transaction.NewTrx(dbClient)
	employeeServiceImpl := service.NewEmployeeService(employeeRepositoryImpl, cacheImpl, trxImpl)
	return employeeServiceImpl
}

// employee_injector.go:

var providerEmployee = wire.NewSet(repository.NewEmployeeRepository, transaction.NewTrx, service.NewEmployeeService, cache.NewCache, wire.Bind(new(repository.EmployeeRepository), new(*repository.EmployeeRepositoryImpl)), wire.Bind(new(transaction.Trx), new(*transaction.TrxImpl)), wire.Bind(new(cache.Cache), new(*cache.CacheImpl)), wire.Bind(new(service.EmployeeService), new(*service.EmployeeServiceImpl)))
