// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "https://mceasy.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account-configs": {
            "get": {
                "description": "Get all Account Configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Configs"
                ],
                "summary": "Get all Account Configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.AccountConfigResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Account Configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Configs"
                ],
                "summary": "Create new Account Configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create AccountConfig DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccountConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AccountConfigResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/account-configs/{id}": {
            "get": {
                "description": "Get a Account Configs by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Configs"
                ],
                "summary": "Get a Account Configs by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "AccountConfig's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AccountConfigUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Account Configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Configs"
                ],
                "summary": "Update a Account Configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "AccountConfig's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update AccountConfig DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccountConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AccountConfigUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Account Configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Configs"
                ],
                "summary": "Delete a Account Configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "AccountConfig's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AccountConfigDeleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/active-transactions": {
            "get": {
                "description": "Get all Active Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Active Transaction"
                ],
                "summary": "Get all Active Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.ActiveTransactionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Active Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Active Transaction"
                ],
                "summary": "Create new Active Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Active Transaction DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActiveTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ActiveTransactionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/active-transactions/{id}": {
            "get": {
                "description": "Get a Active Transactions by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Active Transaction"
                ],
                "summary": "Get a Active Transactions by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActiveTransaction's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ActiveTransactionUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Active Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Active Transaction"
                ],
                "summary": "Update a Active Transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActiveTransaction's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update ActiveTransaction DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActiveTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ActiveTransactionUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Active Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Active Transaction"
                ],
                "summary": "Delete a Active Transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActiveTransaction's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ActiveTransactionDeleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/daily-reports": {
            "get": {
                "description": "Get all Dailly Reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dailly Report"
                ],
                "summary": "Get all Dailly Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.DailyReportResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Dailly Reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dailly Report"
                ],
                "summary": "Create new Dailly Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Dailly Report DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DailyReportRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DailyReportResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/daily-reports/{id}": {
            "get": {
                "description": "Get a Dailly Reports by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dailly Report"
                ],
                "summary": "Get a Dailly Reports by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DailyReport's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DailyReportUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Dailly Reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dailly Report"
                ],
                "summary": "Update a Dailly Reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DailyReport's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update DailyReport DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DailyReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DailyReportUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Dailly Reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dailly Report"
                ],
                "summary": "Delete a Dailly Reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DailyReport's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DailyReportDeleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/ticks": {
            "post": {
                "description": "Synchronizer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticks"
                ],
                "summary": "Synchronizer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Market Data DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MarketData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/ticks/aggregator": {
            "post": {
                "description": "Forex Aggregator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticks"
                ],
                "summary": "Forex Aggregator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Forex Data DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ForexDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.UserResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create User DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/user-accounts": {
            "post": {
                "description": "Create new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Create new user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create UserAccount DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserAccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/user-accounts/{id}": {
            "get": {
                "description": "Get a user account by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Get a user account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserAccount's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserAccountUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Update a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserAccount's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update UserAccount DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserAccountUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Delete a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserAccount's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserAccountDeleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Login User DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Get a user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User DTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserUpdateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Key",
                        "name": "X-Client-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User's ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserDeleteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.body"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountConfigDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_at",
                "is_deleted"
            ],
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                }
            }
        },
        "dto.AccountConfigRequest": {
            "type": "object",
            "required": [
                "account_id",
                "max_drawdown_percentage",
                "profit_target_percentage"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "max_drawdown_percentage": {
                    "type": "number"
                },
                "profit_target_percentage": {
                    "type": "number"
                }
            }
        },
        "dto.AccountConfigResponse": {
            "type": "object",
            "required": [
                "account_id",
                "created_at",
                "id",
                "max_drawdown_percentage",
                "profit_target_percentage"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_drawdown_percentage": {
                    "type": "number"
                },
                "profit_target_percentage": {
                    "type": "number"
                }
            }
        },
        "dto.AccountConfigUpdateResponse": {
            "type": "object",
            "required": [
                "account_id",
                "id",
                "max_drawdown_percentage",
                "modified_at",
                "profit_target_percentage"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_drawdown_percentage": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "profit_target_percentage": {
                    "type": "string"
                }
            }
        },
        "dto.ActiveTransactionDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_at",
                "is_deleted"
            ],
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                }
            }
        },
        "dto.ActiveTransactionRequest": {
            "type": "object",
            "required": [
                "account_id",
                "commission",
                "gross_profit",
                "net_profit",
                "open_price",
                "open_timestamptz",
                "pips",
                "sl",
                "slippage",
                "spread",
                "symbol",
                "tp",
                "volume"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "commission": {
                    "type": "number"
                },
                "gross_profit": {
                    "type": "number"
                },
                "net_profit": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "open_timestamptz": {
                    "type": "string"
                },
                "pips": {
                    "type": "number"
                },
                "sl": {
                    "type": "number"
                },
                "slippage": {
                    "type": "number"
                },
                "spread": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "tp": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "dto.ActiveTransactionResponse": {
            "type": "object",
            "required": [
                "account_id",
                "commission",
                "gross_profit",
                "id",
                "net_profit",
                "open_price",
                "open_timestamptz",
                "pips",
                "sl",
                "slippage",
                "spread",
                "symbol",
                "tp",
                "volume"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "commission": {
                    "type": "number"
                },
                "gross_profit": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "net_profit": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "open_timestamptz": {
                    "type": "string"
                },
                "pips": {
                    "type": "number"
                },
                "sl": {
                    "type": "number"
                },
                "slippage": {
                    "type": "number"
                },
                "spread": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "tp": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "dto.ActiveTransactionUpdateResponse": {
            "type": "object",
            "required": [
                "account_id",
                "commission",
                "gross_profit",
                "id",
                "net_profit",
                "open_price",
                "open_timestamptz",
                "pips",
                "sl",
                "slippage",
                "spread",
                "symbol",
                "tp",
                "volume"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "commission": {
                    "type": "number"
                },
                "gross_profit": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "net_profit": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "open_timestamptz": {
                    "type": "string"
                },
                "pips": {
                    "type": "number"
                },
                "sl": {
                    "type": "number"
                },
                "slippage": {
                    "type": "number"
                },
                "spread": {
                    "type": "number"
                },
                "symbol": {
                    "type": "number"
                },
                "tp": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "dto.DailyReportDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_at",
                "is_deleted"
            ],
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                }
            }
        },
        "dto.DailyReportRequest": {
            "type": "object",
            "required": [
                "account_id",
                "date",
                "drawdown_max",
                "drawdown_relative",
                "ending_balance",
                "initial_balance",
                "long_trades",
                "loss_trades",
                "profit_target",
                "profit_trades",
                "short_trades",
                "total_commission",
                "total_loss",
                "total_net_profit",
                "total_profit",
                "total_trades"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "drawdown_max": {
                    "type": "number"
                },
                "drawdown_relative": {
                    "type": "number"
                },
                "ending_balance": {
                    "type": "number"
                },
                "initial_balance": {
                    "type": "number"
                },
                "is_allowed_to_trade": {
                    "type": "boolean"
                },
                "is_target_achieved": {
                    "type": "boolean"
                },
                "long_trades": {
                    "type": "integer"
                },
                "loss_trades": {
                    "type": "integer"
                },
                "profit_target": {
                    "type": "number"
                },
                "profit_trades": {
                    "type": "integer"
                },
                "short_trades": {
                    "type": "integer"
                },
                "total_commission": {
                    "type": "number"
                },
                "total_loss": {
                    "type": "number"
                },
                "total_net_profit": {
                    "type": "number"
                },
                "total_profit": {
                    "type": "number"
                },
                "total_trades": {
                    "type": "integer"
                }
            }
        },
        "dto.DailyReportResponse": {
            "type": "object",
            "required": [
                "account_id",
                "date",
                "drawdown_max",
                "drawdown_relative",
                "ending_balance",
                "id",
                "initial_balance",
                "is_allowed_to_trade",
                "is_target_achieved",
                "long_trades",
                "loss_trades",
                "profit_target",
                "profit_trades",
                "short_trades",
                "total_commission",
                "total_loss",
                "total_net_profit",
                "total_profit",
                "total_trades"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "drawdown_max": {
                    "type": "number"
                },
                "drawdown_relative": {
                    "type": "number"
                },
                "ending_balance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "initial_balance": {
                    "type": "number"
                },
                "is_allowed_to_trade": {
                    "type": "boolean"
                },
                "is_target_achieved": {
                    "type": "boolean"
                },
                "long_trades": {
                    "type": "integer"
                },
                "loss_trades": {
                    "type": "integer"
                },
                "profit_target": {
                    "type": "number"
                },
                "profit_trades": {
                    "type": "integer"
                },
                "short_trades": {
                    "type": "integer"
                },
                "total_commission": {
                    "type": "number"
                },
                "total_loss": {
                    "type": "number"
                },
                "total_net_profit": {
                    "type": "number"
                },
                "total_profit": {
                    "type": "number"
                },
                "total_trades": {
                    "type": "integer"
                }
            }
        },
        "dto.DailyReportUpdateResponse": {
            "type": "object",
            "required": [
                "account_id",
                "date",
                "drawdown_max",
                "drawdown_relative",
                "ending_balance",
                "id",
                "initial_balance",
                "is_allowed_to_trade",
                "is_target_achieved",
                "long_trades",
                "loss_trades",
                "profit_target",
                "profit_trades",
                "short_trades",
                "total_commission",
                "total_loss",
                "total_net_profit",
                "total_profit",
                "total_trades"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "drawdown_max": {
                    "type": "number"
                },
                "drawdown_relative": {
                    "type": "number"
                },
                "ending_balance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "initial_balance": {
                    "type": "number"
                },
                "is_allowed_to_trade": {
                    "type": "boolean"
                },
                "is_target_achieved": {
                    "type": "boolean"
                },
                "long_trades": {
                    "type": "integer"
                },
                "loss_trades": {
                    "type": "integer"
                },
                "profit_target": {
                    "type": "number"
                },
                "profit_trades": {
                    "type": "integer"
                },
                "short_trades": {
                    "type": "integer"
                },
                "total_commission": {
                    "type": "number"
                },
                "total_loss": {
                    "type": "number"
                },
                "total_net_profit": {
                    "type": "number"
                },
                "total_profit": {
                    "type": "number"
                },
                "total_trades": {
                    "type": "integer"
                }
            }
        },
        "dto.ForexDataRequest": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "balance": {
                    "type": "number"
                },
                "daily": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.SymbolRequest"
                    }
                },
                "equity": {
                    "type": "number"
                },
                "h4": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.SymbolRequest"
                    }
                },
                "m1": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.SymbolRequest"
                    }
                },
                "m15": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.SymbolRequest"
                    }
                },
                "m5": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.SymbolRequest"
                    }
                },
                "unrealized_net_profit": {
                    "type": "number"
                }
            }
        },
        "dto.MarketData": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/definitions/internal_applications_tick_dto.Account"
                },
                "Ask": {
                    "type": "number"
                },
                "Bid": {
                    "type": "number"
                },
                "CorrelationID": {
                    "type": "string"
                },
                "Symbol": {
                    "$ref": "#/definitions/dto.Symbol"
                },
                "SymbolName": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                }
            }
        },
        "dto.Symbol": {
            "type": "object",
            "properties": {
                "AdministrativeCharge": {
                    "type": "number"
                },
                "AdministrativeCharge3DaysRollover": {
                    "type": "number"
                },
                "Ask": {
                    "type": "number"
                },
                "BaseAsset": {
                    "$ref": "#/definitions/internal_applications_tick_dto.Asset"
                },
                "Bid": {
                    "type": "number"
                },
                "Code": {
                    "type": "string"
                },
                "Commission": {
                    "type": "number"
                },
                "CommissionType": {
                    "type": "number"
                },
                "Description": {
                    "type": "string"
                },
                "Digits": {
                    "type": "number"
                },
                "DynamicLeverage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.DynamicLeverage"
                    }
                },
                "GracePeriod": {
                    "type": "number"
                },
                "Id": {
                    "type": "integer"
                },
                "IsTradingEnabled": {
                    "type": "boolean"
                },
                "Leverage": {
                    "type": "number"
                },
                "LotSize": {
                    "type": "number"
                },
                "MarketHours": {
                    "$ref": "#/definitions/internal_applications_tick_dto.MarketHours"
                },
                "MinCommission": {
                    "type": "number"
                },
                "MinCommissionAsset": {
                    "$ref": "#/definitions/internal_applications_tick_dto.Asset"
                },
                "MinCommissionType": {
                    "type": "number"
                },
                "MinDistanceType": {
                    "type": "number"
                },
                "MinStopLossDistance": {
                    "type": "number"
                },
                "MinTakeProfitDistance": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "PipSize": {
                    "type": "number"
                },
                "PipValue": {
                    "type": "number"
                },
                "PnLConversionFeeRate": {
                    "type": "number"
                },
                "PointSize": {
                    "type": "number"
                },
                "PreciseLeverage": {
                    "type": "number"
                },
                "QuoteAsset": {
                    "$ref": "#/definitions/internal_applications_tick_dto.Asset"
                },
                "Spread": {
                    "type": "number"
                },
                "Swap3DaysRollover": {
                    "type": "number"
                },
                "SwapCalculationType": {
                    "type": "number"
                },
                "SwapLong": {
                    "type": "number"
                },
                "SwapShort": {
                    "type": "number"
                },
                "TickSize": {
                    "type": "number"
                },
                "TickValue": {
                    "type": "number"
                },
                "TradingMode": {
                    "type": "number"
                },
                "UnrealizedGrossProfit": {
                    "type": "number"
                },
                "UnrealizedNetProfit": {
                    "type": "number"
                },
                "VolumeInUnitsMax": {
                    "type": "number"
                },
                "VolumeInUnitsMin": {
                    "type": "number"
                },
                "VolumeInUnitsStep": {
                    "type": "number"
                },
                "VolumeMax": {
                    "type": "number"
                },
                "VolumeMin": {
                    "type": "number"
                },
                "VolumeStep": {
                    "type": "number"
                }
            }
        },
        "dto.UserAccountDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_at",
                "is_deleted"
            ],
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                }
            }
        },
        "dto.UserAccountRequest": {
            "type": "object",
            "required": [
                "account_number",
                "platform",
                "user_id"
            ],
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "delete_remarks": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UserAccountResponse": {
            "type": "object",
            "required": [
                "account_number",
                "created_at",
                "id",
                "platform",
                "user_id"
            ],
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "delete_remarks": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "platform": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UserAccountUpdateResponse": {
            "type": "object",
            "required": [
                "account_number",
                "id",
                "modified_at",
                "platform",
                "user_id"
            ],
            "properties": {
                "account_number": {
                    "type": "integer"
                },
                "delete_remarks": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UserDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_at",
                "is_deleted"
            ],
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                }
            }
        },
        "dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "fullname",
                "password",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "required": [
                "avatar",
                "created_at",
                "email",
                "fullname",
                "id",
                "token",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserUpdateResponse": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "fullname",
                "id",
                "modified_at",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_applications_tick_dto.Account": {
            "type": "object",
            "properties": {
                "AccountType": {
                    "type": "integer"
                },
                "Asset": {
                    "$ref": "#/definitions/internal_applications_tick_dto.Asset"
                },
                "Balance": {
                    "type": "number"
                },
                "BrokerName": {
                    "type": "string"
                },
                "Credit": {
                    "type": "number"
                },
                "Equity": {
                    "type": "number"
                },
                "FreeMargin": {
                    "type": "number"
                },
                "IsLive": {
                    "type": "boolean"
                },
                "Margin": {
                    "type": "number"
                },
                "MarginLevel": {
                    "type": "number"
                },
                "Number": {
                    "type": "integer"
                },
                "PreciseLeverage": {
                    "type": "number"
                },
                "StopOutLevel": {
                    "type": "number"
                },
                "TotalMarginCalculationType": {
                    "type": "integer"
                },
                "UnrealizedGrossProfit": {
                    "type": "number"
                },
                "UnrealizedNetProfit": {
                    "type": "number"
                },
                "UserId": {
                    "type": "integer"
                },
                "UserNickName": {
                    "type": "string"
                }
            }
        },
        "internal_applications_tick_dto.Asset": {
            "type": "object",
            "properties": {
                "Digits": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "internal_applications_tick_dto.DynamicLeverage": {
            "type": "object",
            "properties": {
                "Leverage": {
                    "type": "number"
                },
                "Volume": {
                    "type": "number"
                }
            }
        },
        "internal_applications_tick_dto.MarketHours": {
            "type": "object",
            "properties": {
                "Sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_applications_tick_dto.Session"
                    }
                }
            }
        },
        "internal_applications_tick_dto.Session": {
            "type": "object",
            "properties": {
                "EndDay": {
                    "type": "integer"
                },
                "EndTime": {
                    "type": "string"
                },
                "StartDay": {
                    "type": "integer"
                },
                "StartTime": {
                    "type": "string"
                }
            }
        },
        "internal_applications_tick_dto.SymbolRequest": {
            "type": "object",
            "properties": {
                "ask": {
                    "type": "number"
                },
                "baseCurrency": {
                    "type": "string"
                },
                "bid": {
                    "type": "number"
                },
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "log_return": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "quoteCurrency": {
                    "type": "string"
                },
                "spread": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "response.body": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "serverTime": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8888",
	BasePath:         "/micro-go-template",
	Schemes:          []string{},
	Title:            "Micro Go Template Service",
	Description:      "Please welcome a holy high-speed and high-performance Echo service!",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
