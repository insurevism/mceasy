basePath: /micro-go-template
definitions:
  dto.AccountConfigDeleteResponse:
    properties:
      deleted_at:
        type: string
      is_deleted:
        type: boolean
    required:
    - deleted_at
    - is_deleted
    type: object
  dto.AccountConfigRequest:
    properties:
      account_id:
        type: integer
      max_drawdown_percentage:
        type: number
      profit_target_percentage:
        type: number
    required:
    - account_id
    - max_drawdown_percentage
    - profit_target_percentage
    type: object
  dto.AccountConfigResponse:
    properties:
      account_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      max_drawdown_percentage:
        type: number
      profit_target_percentage:
        type: number
    required:
    - account_id
    - created_at
    - id
    - max_drawdown_percentage
    - profit_target_percentage
    type: object
  dto.AccountConfigUpdateResponse:
    properties:
      account_id:
        type: string
      id:
        type: integer
      max_drawdown_percentage:
        type: string
      modified_at:
        type: string
      profit_target_percentage:
        type: string
    required:
    - account_id
    - id
    - max_drawdown_percentage
    - modified_at
    - profit_target_percentage
    type: object
  dto.ActiveTransactionDeleteResponse:
    properties:
      deleted_at:
        type: string
      is_deleted:
        type: boolean
    required:
    - deleted_at
    - is_deleted
    type: object
  dto.ActiveTransactionRequest:
    properties:
      account_id:
        type: integer
      commission:
        type: number
      gross_profit:
        type: number
      net_profit:
        type: number
      open_price:
        type: number
      open_timestamptz:
        type: string
      pips:
        type: number
      sl:
        type: number
      slippage:
        type: number
      spread:
        type: number
      symbol:
        type: string
      tp:
        type: number
      volume:
        type: number
    required:
    - account_id
    - commission
    - gross_profit
    - net_profit
    - open_price
    - open_timestamptz
    - pips
    - sl
    - slippage
    - spread
    - symbol
    - tp
    - volume
    type: object
  dto.ActiveTransactionResponse:
    properties:
      account_id:
        type: integer
      commission:
        type: number
      gross_profit:
        type: number
      id:
        type: integer
      net_profit:
        type: number
      open_price:
        type: number
      open_timestamptz:
        type: string
      pips:
        type: number
      sl:
        type: number
      slippage:
        type: number
      spread:
        type: number
      symbol:
        type: string
      tp:
        type: number
      volume:
        type: number
    required:
    - account_id
    - commission
    - gross_profit
    - id
    - net_profit
    - open_price
    - open_timestamptz
    - pips
    - sl
    - slippage
    - spread
    - symbol
    - tp
    - volume
    type: object
  dto.ActiveTransactionUpdateResponse:
    properties:
      account_id:
        type: integer
      commission:
        type: number
      gross_profit:
        type: number
      id:
        type: integer
      net_profit:
        type: number
      open_price:
        type: number
      open_timestamptz:
        type: string
      pips:
        type: number
      sl:
        type: number
      slippage:
        type: number
      spread:
        type: number
      symbol:
        type: number
      tp:
        type: number
      volume:
        type: number
    required:
    - account_id
    - commission
    - gross_profit
    - id
    - net_profit
    - open_price
    - open_timestamptz
    - pips
    - sl
    - slippage
    - spread
    - symbol
    - tp
    - volume
    type: object
  dto.DailyReportDeleteResponse:
    properties:
      deleted_at:
        type: string
      is_deleted:
        type: boolean
    required:
    - deleted_at
    - is_deleted
    type: object
  dto.DailyReportRequest:
    properties:
      account_id:
        type: integer
      date:
        type: string
      drawdown_max:
        type: number
      drawdown_relative:
        type: number
      ending_balance:
        type: number
      initial_balance:
        type: number
      is_allowed_to_trade:
        type: boolean
      is_target_achieved:
        type: boolean
      long_trades:
        type: integer
      loss_trades:
        type: integer
      profit_target:
        type: number
      profit_trades:
        type: integer
      short_trades:
        type: integer
      total_commission:
        type: number
      total_loss:
        type: number
      total_net_profit:
        type: number
      total_profit:
        type: number
      total_trades:
        type: integer
    required:
    - account_id
    - date
    - drawdown_max
    - drawdown_relative
    - ending_balance
    - initial_balance
    - long_trades
    - loss_trades
    - profit_target
    - profit_trades
    - short_trades
    - total_commission
    - total_loss
    - total_net_profit
    - total_profit
    - total_trades
    type: object
  dto.DailyReportResponse:
    properties:
      account_id:
        type: integer
      date:
        type: string
      drawdown_max:
        type: number
      drawdown_relative:
        type: number
      ending_balance:
        type: number
      id:
        type: integer
      initial_balance:
        type: number
      is_allowed_to_trade:
        type: boolean
      is_target_achieved:
        type: boolean
      long_trades:
        type: integer
      loss_trades:
        type: integer
      profit_target:
        type: number
      profit_trades:
        type: integer
      short_trades:
        type: integer
      total_commission:
        type: number
      total_loss:
        type: number
      total_net_profit:
        type: number
      total_profit:
        type: number
      total_trades:
        type: integer
    required:
    - account_id
    - date
    - drawdown_max
    - drawdown_relative
    - ending_balance
    - id
    - initial_balance
    - is_allowed_to_trade
    - is_target_achieved
    - long_trades
    - loss_trades
    - profit_target
    - profit_trades
    - short_trades
    - total_commission
    - total_loss
    - total_net_profit
    - total_profit
    - total_trades
    type: object
  dto.DailyReportUpdateResponse:
    properties:
      account_id:
        type: integer
      date:
        type: string
      drawdown_max:
        type: number
      drawdown_relative:
        type: number
      ending_balance:
        type: number
      id:
        type: integer
      initial_balance:
        type: number
      is_allowed_to_trade:
        type: boolean
      is_target_achieved:
        type: boolean
      long_trades:
        type: integer
      loss_trades:
        type: integer
      profit_target:
        type: number
      profit_trades:
        type: integer
      short_trades:
        type: integer
      total_commission:
        type: number
      total_loss:
        type: number
      total_net_profit:
        type: number
      total_profit:
        type: number
      total_trades:
        type: integer
    required:
    - account_id
    - date
    - drawdown_max
    - drawdown_relative
    - ending_balance
    - id
    - initial_balance
    - is_allowed_to_trade
    - is_target_achieved
    - long_trades
    - loss_trades
    - profit_target
    - profit_trades
    - short_trades
    - total_commission
    - total_loss
    - total_net_profit
    - total_profit
    - total_trades
    type: object
  dto.ForexDataRequest:
    properties:
      account_number:
        type: integer
      balance:
        type: number
      daily:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.SymbolRequest'
        type: array
      equity:
        type: number
      h4:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.SymbolRequest'
        type: array
      m1:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.SymbolRequest'
        type: array
      m5:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.SymbolRequest'
        type: array
      m15:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.SymbolRequest'
        type: array
      unrealized_net_profit:
        type: number
    type: object
  dto.MarketData:
    properties:
      Account:
        $ref: '#/definitions/internal_applications_tick_dto.Account'
      Ask:
        type: number
      Bid:
        type: number
      CorrelationID:
        type: string
      Symbol:
        $ref: '#/definitions/dto.Symbol'
      SymbolName:
        type: string
      Time:
        type: string
    type: object
  dto.Symbol:
    properties:
      AdministrativeCharge:
        type: number
      AdministrativeCharge3DaysRollover:
        type: number
      Ask:
        type: number
      BaseAsset:
        $ref: '#/definitions/internal_applications_tick_dto.Asset'
      Bid:
        type: number
      Code:
        type: string
      Commission:
        type: number
      CommissionType:
        type: number
      Description:
        type: string
      Digits:
        type: number
      DynamicLeverage:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.DynamicLeverage'
        type: array
      GracePeriod:
        type: number
      Id:
        type: integer
      IsTradingEnabled:
        type: boolean
      Leverage:
        type: number
      LotSize:
        type: number
      MarketHours:
        $ref: '#/definitions/internal_applications_tick_dto.MarketHours'
      MinCommission:
        type: number
      MinCommissionAsset:
        $ref: '#/definitions/internal_applications_tick_dto.Asset'
      MinCommissionType:
        type: number
      MinDistanceType:
        type: number
      MinStopLossDistance:
        type: number
      MinTakeProfitDistance:
        type: number
      Name:
        type: string
      PipSize:
        type: number
      PipValue:
        type: number
      PnLConversionFeeRate:
        type: number
      PointSize:
        type: number
      PreciseLeverage:
        type: number
      QuoteAsset:
        $ref: '#/definitions/internal_applications_tick_dto.Asset'
      Spread:
        type: number
      Swap3DaysRollover:
        type: number
      SwapCalculationType:
        type: number
      SwapLong:
        type: number
      SwapShort:
        type: number
      TickSize:
        type: number
      TickValue:
        type: number
      TradingMode:
        type: number
      UnrealizedGrossProfit:
        type: number
      UnrealizedNetProfit:
        type: number
      VolumeInUnitsMax:
        type: number
      VolumeInUnitsMin:
        type: number
      VolumeInUnitsStep:
        type: number
      VolumeMax:
        type: number
      VolumeMin:
        type: number
      VolumeStep:
        type: number
    type: object
  dto.UserAccountDeleteResponse:
    properties:
      deleted_at:
        type: string
      is_deleted:
        type: boolean
    required:
    - deleted_at
    - is_deleted
    type: object
  dto.UserAccountRequest:
    properties:
      account_number:
        type: integer
      delete_remarks:
        type: string
      platform:
        type: string
      user_id:
        type: integer
    required:
    - account_number
    - platform
    - user_id
    type: object
  dto.UserAccountResponse:
    properties:
      account_number:
        type: integer
      created_at:
        type: string
      delete_remarks:
        type: string
      id:
        type: integer
      platform:
        type: string
      user_id:
        type: integer
    required:
    - account_number
    - created_at
    - id
    - platform
    - user_id
    type: object
  dto.UserAccountUpdateResponse:
    properties:
      account_number:
        type: integer
      delete_remarks:
        type: string
      id:
        type: integer
      modified_at:
        type: string
      platform:
        type: string
      user_id:
        type: integer
    required:
    - account_number
    - id
    - modified_at
    - platform
    - user_id
    type: object
  dto.UserDeleteResponse:
    properties:
      deleted_at:
        type: string
      is_deleted:
        type: boolean
    required:
    - deleted_at
    - is_deleted
    type: object
  dto.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.UserRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - avatar
    - email
    - fullname
    - password
    - username
    type: object
  dto.UserResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      phone:
        type: string
      token:
        type: string
      username:
        type: string
    required:
    - avatar
    - created_at
    - email
    - fullname
    - id
    - token
    - username
    type: object
  dto.UserUpdateResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      modified_at:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - avatar
    - email
    - fullname
    - id
    - modified_at
    - username
    type: object
  internal_applications_tick_dto.Account:
    properties:
      AccountType:
        type: integer
      Asset:
        $ref: '#/definitions/internal_applications_tick_dto.Asset'
      Balance:
        type: number
      BrokerName:
        type: string
      Credit:
        type: number
      Equity:
        type: number
      FreeMargin:
        type: number
      IsLive:
        type: boolean
      Margin:
        type: number
      MarginLevel:
        type: number
      Number:
        type: integer
      PreciseLeverage:
        type: number
      StopOutLevel:
        type: number
      TotalMarginCalculationType:
        type: integer
      UnrealizedGrossProfit:
        type: number
      UnrealizedNetProfit:
        type: number
      UserId:
        type: integer
      UserNickName:
        type: string
    type: object
  internal_applications_tick_dto.Asset:
    properties:
      Digits:
        type: integer
      Name:
        type: string
    type: object
  internal_applications_tick_dto.DynamicLeverage:
    properties:
      Leverage:
        type: number
      Volume:
        type: number
    type: object
  internal_applications_tick_dto.MarketHours:
    properties:
      Sessions:
        items:
          $ref: '#/definitions/internal_applications_tick_dto.Session'
        type: array
    type: object
  internal_applications_tick_dto.Session:
    properties:
      EndDay:
        type: integer
      EndTime:
        type: string
      StartDay:
        type: integer
      StartTime:
        type: string
    type: object
  internal_applications_tick_dto.SymbolRequest:
    properties:
      ask:
        type: number
      baseCurrency:
        type: string
      bid:
        type: number
      close:
        type: number
      high:
        type: number
      log_return:
        type: number
      low:
        type: number
      open:
        type: number
      quoteCurrency:
        type: string
      spread:
        type: number
      symbol:
        type: string
      timestamp:
        type: string
      volume:
        type: number
    type: object
  response.body:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
      serverTime:
        type: string
    type: object
host: localhost:8888
info:
  contact:
    url: https://mceasy.com
  description: Please welcome a holy high-speed and high-performance Echo service!
  title: Micro Go Template Service
  version: 0.0.1
paths:
  /account-configs:
    get:
      consumes:
      - application/json
      description: Get all Account Configs
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AccountConfigResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get all Account Configs
      tags:
      - Account Configs
    post:
      consumes:
      - application/json
      description: Create new Account Configs
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Create AccountConfig DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.AccountConfigRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.AccountConfigResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Create new Account Configs
      tags:
      - Account Configs
  /account-configs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Account Configs
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: AccountConfig's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.AccountConfigDeleteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Delete a Account Configs
      tags:
      - Account Configs
    get:
      consumes:
      - application/json
      description: Get a Account Configs by id
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: AccountConfig's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.AccountConfigUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get a Account Configs by id
      tags:
      - Account Configs
    put:
      consumes:
      - application/json
      description: Update a Account Configs
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: AccountConfig's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update AccountConfig DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.AccountConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.AccountConfigUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Update a Account Configs
      tags:
      - Account Configs
  /active-transactions:
    get:
      consumes:
      - application/json
      description: Get all Active Transactions
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ActiveTransactionResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get all Active Transactions
      tags:
      - Active Transaction
    post:
      consumes:
      - application/json
      description: Create new Active Transactions
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Create Active Transaction DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ActiveTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.ActiveTransactionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Create new Active Transactions
      tags:
      - Active Transaction
  /active-transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Active Transactions
      parameters:
      - description: ActiveTransaction's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.ActiveTransactionDeleteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Delete a Active Transactions
      tags:
      - Active Transaction
    get:
      consumes:
      - application/json
      description: Get a Active Transactions by id
      parameters:
      - description: ActiveTransaction's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.ActiveTransactionUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get a Active Transactions by id
      tags:
      - Active Transaction
    put:
      consumes:
      - application/json
      description: Update a Active Transactions
      parameters:
      - description: ActiveTransaction's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Update ActiveTransaction DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ActiveTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.ActiveTransactionUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Update a Active Transactions
      tags:
      - Active Transaction
  /daily-reports:
    get:
      consumes:
      - application/json
      description: Get all Dailly Reports
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.DailyReportResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get all Dailly Reports
      tags:
      - Dailly Report
    post:
      consumes:
      - application/json
      description: Create new Dailly Reports
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Create Dailly Report DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.DailyReportRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.DailyReportResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Create new Dailly Reports
      tags:
      - Dailly Report
  /daily-reports/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Dailly Reports
      parameters:
      - description: DailyReport's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.DailyReportDeleteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Delete a Dailly Reports
      tags:
      - Dailly Report
    get:
      consumes:
      - application/json
      description: Get a Dailly Reports by id
      parameters:
      - description: DailyReport's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.DailyReportUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get a Dailly Reports by id
      tags:
      - Dailly Report
    put:
      consumes:
      - application/json
      description: Update a Dailly Reports
      parameters:
      - description: DailyReport's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Update DailyReport DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.DailyReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.DailyReportUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Update a Dailly Reports
      tags:
      - Dailly Report
  /ticks:
    post:
      consumes:
      - application/json
      description: Synchronizer
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Market Data DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.MarketData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Synchronizer
      tags:
      - Ticks
  /ticks/aggregator:
    post:
      consumes:
      - application/json
      description: Forex Aggregator
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Forex Data DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ForexDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Forex Aggregator
      tags:
      - Ticks
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Create User DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Create new user
      tags:
      - User
  /user-accounts:
    post:
      consumes:
      - application/json
      description: Create new user account
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Create UserAccount DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserAccountResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Create new user account
      tags:
      - User Account
  /user-accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: UserAccount's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserAccountDeleteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Delete a user account
      tags:
      - User Account
    get:
      consumes:
      - application/json
      description: Get a user account by id
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: UserAccount's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserAccountUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get a user account by id
      tags:
      - User Account
    put:
      consumes:
      - application/json
      description: Update a user account
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: UserAccount's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update UserAccount DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserAccountUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Update a user account
      tags:
      - User Account
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: User's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserDeleteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get a user by id
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: User's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Get a user by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: User's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserUpdateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Update a user
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Client Key
        in: header
        name: X-Client-Key
        required: true
        type: string
      - description: Login User DTO
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.body'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.body'
      summary: Login
      tags:
      - User
swagger: "2.0"
